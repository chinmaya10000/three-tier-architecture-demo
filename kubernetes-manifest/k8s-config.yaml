apiVersion: apps/v1
kind: Deployment 
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  replicas: 2
  selector:
    matchLabels: 
      app: mongodb
  template:
    metadata:
      labels: 
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: robotshop/rs-mongodb:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
--- 
apiVersion: v1
kind: Service
metadata:
  name: mongodb
spec:
  selector:
    app: mongodb
  ports:
  - name: mongo
    port: 27017
    targetPort: 27017

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  template:
    metadata:
      labels:
        app: redis
    spec:  
      containers:
      - name: redis
        image: redis:4.0.6
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        volumeMounts:
          - name: data
            mountPath: /mnt/redis
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        
        storageClassName: gp2
        volumeMode: Filesystem
        
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis
spec:
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels: 
    app: rabbitmq
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rabbitmq
  template: 
    metadata:
      labels: 
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:3.7-management-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5672
        - containerPort: 15672
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
      restartPolicy: Always
--- 
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
  - name: rabbitmq-amqp
    port: 5672
    targetPort: 5672
  - name: rabbitmq-management
    port: 15672
    targetPort: 15672
  - name: rabbitmq-epmd
    port: 4369
    targetPort: 4369

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  labels: 
    app: catalouge
spec:
  replicas: 2
  selector:
    matchLabels:
      app: catalogue
  template: 
    metadata:
      labels: 
        app: catalogue
    spec:
      containers:
      - name: catalogue
        image: robotshop/rs-catalogue:latest
        ports:
        - containerPort: 8080
        env:
        - name: INSTANA_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
spec:
  selector:
    app: catalogue 
  ports:
  - name: http
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  labels: 
    app: user
spec:
  replicas: 2
  selector:
    matchLabels:
      app: user
  template: 
    metadata:
      labels: 
        app: user
    spec:
      containers:
      - name: user
        image: robotshop/rs-user:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: INSTANA_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: user
spec:
  selector:
    app: user
  ports:
  - name: http
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cart
  labels: 
    app: cart
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cart
  template:
    metadata:
      labels: 
        app: cart
    spec:
      containers:
      - name: cart
        image: robotshop/rs-cart:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: INSTANA_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: cart
spec:
  selector:
    app: cart
  ports: 
  - name: http
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: mysql
  labels: 
    app: mysql
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mysql
  template: 
    metadata:
      labels: 
        app: mysql
    spec:
      containers:
      - name: mysql
        image: robotshop/rs-mysql-db:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3306
        securityContext:
          capabilities:
            add: ["NET_ADMIN"]
        resources:
          limits:
            cpu: 200m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 700Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
  labels: 
    app: shipping
spec:
  replicas: 2
  selector:
    matchLabels:
      app: shipping
  template: 
    metadata:
      labels: 
        app: shipping
    spec:
      containers:
      - name: shipping
        image: robotshop/rs-shipping:latest
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        resources:
          limits:
            cpu: 200m
            memory: 1000Mi
          requests:
            cpu: 100m
            memory: 500Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
spec:
  selector:
    app: shipping
  ports:
  - name: http
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ratings
  labels: 
    app: ratings
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ratings
  template: 
    metadata:
      labels: 
        app: ratings
    spec:
      containers:
      - name: ratings
        image: robotshop/rs-ratings:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /_health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ratings
spec:
  selector:
    app: ratings
  ports:
  - name: http
    port: 80
    targetPort: 80

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: payment
  labels: 
    app: payment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: payment
  template: 
    metadata:
      labels: 
        app: payment
    spec:
      containers:
      - name: payment
        image: robotshop/rs-payment:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: INSTANA_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: payment
spec:
  selector:
    app: payment
  ports:
  - name: http
    port: 8080
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dispatch
  labels: 
    app: dispatch
spec:
  replicas: 2
  selector:
    matchLabels:
      app: dispatch
  template: 
    metadata:
      labels: 
        app: dispatch
    spec:
      containers:
      - name: dispatch
        image: robotshop/rs-dispatch:latest
        env:
        - name: INSTANA_AGENT_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: dispatch
spec:
  clusterIP: None
  selector:
    app: dispatch
  ports:
  - name: headless
    port: 55555
    targetPort: 0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  labels: 
    app: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web
  template: 
    metadata:
      labels: 
        app: web
    spec:
      containers:
      - name: web
        image: robotshop/rs-web:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: web
spec:
  type: LoadBalancer
  selector:
    app: web
  ports:
  - name: http
    port: 8080
    targetPort: 8080

        